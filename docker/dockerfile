# Use multi-stage builds
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 AS builder

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    pkg-config \
    cmake \
    curl \
    python3-pip \
    python3.10-venv \
    git \
    g++ \
    gcc \
    python3-dev \
    libgl1 \
    build-essential && \
    libgl1 \
    git && \
    # Clean up in the same RUN instruction
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Create a virtual environment
RUN python3 -m venv /opt/venv

ENV PATH="/opt/venv/bin:$PATH"

COPY requirements.txt .

# Install packages
RUN pip install --upgrade pip --trusted-host mirrors.aliyun.com -i http://mirrors.aliyun.com/pypi/simple && \
    pip install torch torchvision --trusted-host mirrors.aliyun.com -i http://mirrors.aliyun.com/pypi/simple && \
    pip install git+https://github.com/NVlabs/tiny-cuda-nn/#subdirectory=bindings/torch && \
    pip install -r requirements.txt --trusted-host mirrors.aliyun.com -i http://mirrors.aliyun.com/pypi/simple && \
    # Clean up in the same RUN instruction
    rm -r ~/.cache/pip